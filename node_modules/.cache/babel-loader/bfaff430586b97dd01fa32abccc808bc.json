{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\nconst initialState = {\n  selectedSchool: null\n};\nexport const counterSlice = createSlice({\n  name: 'school',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state, action) => {\n      state.selectedSchool;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n\nexport const selectCount = state => state.counter.value;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchCount","initialState","selectedSchool","counterSlice","name","reducers","increment","state","action","decrement","value","incrementByAmount","payload","actions","selectCount","counter","reducer"],"sources":["C:/Users/murbe/Documents/Python/company/founder_stuff/email_redux_app/school-email-app/src/features/counterSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  selectedSchool: null\n};\n\n\nexport const counterSlice = createSlice({\n  name: 'school',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state, action) => {\n      state.selectedSchool\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n\nexport default counterSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE;AADG,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACtCK,IAAI,EAAE,QADgC;EAEtCH,YAFsC;EAGtC;EACAI,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACL,cAAN;IACD,CAHO;IAIRO,SAAS,EAAGF,KAAD,IAAW;MACpBA,KAAK,CAACG,KAAN,IAAe,CAAf;IACD,CANO;IAOR;IACAC,iBAAiB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACG,KAAN,IAAeF,MAAM,CAACI,OAAtB;IACD;EAVO;AAJ4B,CAAD,CAAhC;AAkBP,OAAO,MAAM;EAAEN,SAAF;EAAaG,SAAb;EAAwBE;AAAxB,IAA8CR,YAAY,CAACU,OAAjE,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIP,KAAD,IAAWA,KAAK,CAACQ,OAAN,CAAcL,KAA7C;AAGP,eAAeP,YAAY,CAACa,OAA5B"},"metadata":{},"sourceType":"module"}