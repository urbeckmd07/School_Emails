{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _base = require(\"@mui/base\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\n\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nfunction reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler(_ref) {\n  let {\n    domTreeShapes,\n    start,\n    current,\n    anchor\n  } = _ref;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback(function (translate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","reset","_extends2","_objectWithoutPropertiesLoose2","React","_interopRequireWildcard","_propTypes","_utils","_system","_base","_Drawer","_ownerDocument","_ownerWindow","_useEventCallback","_useEnhancedEffect","_useTheme","_utils2","_SwipeArea","_jsxRuntime","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","useThemeProps","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","maybeSwiping","setMaybeSwiping","useState","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","mode","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","isHorizontal","transform","drawerStyle","webkitTransform","transition","create","getTransitionProps","easing","undefined","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","useEffect","addEventListener","passive","removeEventListener","jsxs","Fragment","children","jsx","pointerEvents","NoSsr","width","process","env","NODE_ENV","propTypes","oneOf","node","bool","number","component","elementTypeAcceptingRef","func","isRequired","object","oneOfType","appear","_default"],"sources":["C:/Users/murbe/Documents/Python/company/founder_stuff/email_redux_app/school-email-app/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _base = require(\"@mui/base\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nfunction reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}